create table Users (
    user_id int primary key auto_increment,
    name VARCHAR(255) not null,
    username VARCHAR(50) unique not null,
    password VARCHAR(255) not null,
    role ENUM('Teacher', 'Student') not null,
    logged_in boolean 
);
select * from Users;
create table Tests (
	test_id int primary key auto_increment,
	teacher_id int not null,
	foreign key (teacher_id) references Users(user_id) on delete cascade
);
select * from Tests;
create table Questions (
	question_id int primary key auto_increment,
	test_id int not null,
	question_text text not null,
	foreign key (test_id) references Tests(test_id) on delete cascade
);
select * from Questions;
CREATE TABLE Responses (
    response_id INT PRIMARY KEY AUTO_INCREMENT,
    student_id INT NOT NULL,
    test_id INT NOT NULL,
    question_id INT NOT NULL,
    answer_text TEXT,
    FOREIGN KEY (student_id) REFERENCES Users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (test_id) REFERENCES Tests(test_id) ON DELETE CASCADE,
    FOREIGN KEY (question_id) REFERENCES Questions(question_id) ON DELETE CASCADE,
    UNIQUE(student_id, test_id, question_id)
);
select * from Responses;
create table Results (
	result_id int primary key auto_increment,
    student_id int not null,
    test_id int not null,
    grade int check (grade >= 0),
    foreign key (student_id) references Users(user_id) on delete cascade,
    foreign key (test_id) references Tests(test_id) on delete cascade
);
select * from Results;